<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoUI</name>
    </assembly>
    <members>
        <member name="T:MonoUI.Button">
            <summary>
            Class for GUI button.
            </summary>
        </member>
        <member name="P:MonoUI.Button.Text">
            <summary>
            The text on the button.
            </summary>
        </member>
        <member name="P:MonoUI.Button.TextColor">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="F:MonoUI.Button.textureHeightDifference">
            <summary>
            The height difference in pixel between the normal state and the pressed state. For text and pictures.
            </summary>
        </member>
        <member name="M:MonoUI.Button.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single)">
            <summary>The private constructor of the button class.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Button.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a new simple button.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="textureNormal">The texture for the button in normal state.</param>
            <param name="texturePressed">The texture for the button in pressed state.</param>
            <param name="scale">The value for scaling the textures. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Button.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single,System.Single)">
            <summary>
            Creates a new button with a picture.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The offset in pixel between the GUI element and the dock location.</param>
            <param name="textureNormal">The texture for the button in normal state.</param>
            <param name="texturePressed">The texture for the button in pressed state.</param>
            <param name="picture">The name of the picture that is displayed within the button.</param>
            <param name="scale">The value for scaling the textures. 1.0 is no scaling.</param>
            <param name="insideScale">A value between 0 and 1 for scaling the picture inside the Button. 1 is the original size.</param>
        </member>
        <member name="M:MonoUI.Button.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Single)">
            <summary>
            Creates a new button with text.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The offset in pixel between the control element and the dock location.</param>
            <param name="textureNormal">The texture for the button in normal state.</param>
            <param name="texturePressed">The texture for the button in pressed state.</param>
            <param name="text">The text that is to be displayed within the button.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text.</param>
            <param name="scale">The value for scaling the textures. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Button.SetPosition(MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point)">
            <summary>
            Sets the position of the control element.
            </summary>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
        </member>
        <member name="M:MonoUI.Button.CalculateInsideSize(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Calculates the size of the content inside the button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MonoUI.Button.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the the button.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.Checkbox">
            <summary>
            Class for GUI checkbox.
            </summary>
        </member>
        <member name="P:MonoUI.Checkbox.State">
            <summary>
            The current On/Off state of the checkbox.
            </summary>
        </member>
        <member name="M:MonoUI.Checkbox.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Boolean,System.Single)">
            <summary>
            Creates a new checkbox.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="textureOff">The the texture for the of/not checked state.</param>
            <param name="textureOn">The the texture for the on/checked state.</param>
            <param name="state">The start state of the checkbox. True for checked.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Checkbox.ToggleState">
            <summary>
            Toggles the state and texture of the checkbox.
            </summary>
        </member>
        <member name="M:MonoUI.Checkbox.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the checkbox.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.DropDownList">
            <summary>
            Class for GUI drop-down list.
            </summary>
        </member>
        <member name="P:MonoUI.DropDownList.ItemBackgroundColor">
            <summary>
            The color of the texture of a non-selected item.
            </summary>
        </member>
        <member name="P:MonoUI.DropDownList.ItemSelectedColor">
            <summary>
            The color of the texture of a selected item.
            </summary>
        </member>
        <member name="P:MonoUI.DropDownList.TextColor">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="P:MonoUI.DropDownList.ActiveItem">
            <summary>
            The currently selected item.
            </summary>
        </member>
        <member name="M:MonoUI.DropDownList.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.String[],Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Int32,System.Int32)">
            <summary>
            Creates a new drop-down list.
            </summary>
            <param name="game">The game instance in that the drop-down list is to be created.</param>
            <param name="dock">The location the drop-down list should dock onto.</param>
            <param name="offset">The space in pixel between the drop-down list and the dock location.</param>
            <param name="items">The selectable items for the drop-down list. The item at index 0 is the first active item.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font the text is using. The font size should match with the measurements of the drop-down list.</param>
            <param name="width">The total width of the drop-down list in pixel. This have to be greater than zero.</param>
            <param name="height">The height of the collapsed drop-down list in pixel. This have to be greater than zero.</param>
        </member>
        <member name="M:MonoUI.DropDownList.SetPicture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Places an optional picture on the right side of the drop-down list.
            </summary>
            <param name="texture">The texture that is to be placed.</param>
            <param name="color">The color of the texture.</param>
            <param name="scale">The scale of the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.DropDownList.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the drop-down list.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.GUI">
            <summary>
            Base class for GUI tree.
            </summary>
        </member>
        <member name="T:MonoUI.GUI.DrawHandler">
            <summary>
            Delegate for managing draw calls.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the textures.</param>
            <param name="gameTime">The game time of the game instance.</param>
        </member>
        <member name="P:MonoUI.GUI.DrawAll">
            <summary>
            Draws all GUI elements.
            </summary>
        </member>
        <member name="P:MonoUI.GUI.Tag">
            <summary>
            For storing additional informations about the GUI element.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.guiItems">
            <summary>
            Collection for all types of GUI items.
            </summary>
        </member>
        <member name="M:MonoUI.GUI.#ctor">
            <summary>
            Base constructor for inheritance.
            </summary>
        </member>
        <member name="M:MonoUI.GUI.Display``1">
            <summary>
            Returns items of a specific GUI type or type that derived from it.
            </summary>
            <typeparam name="T">The type of the GUI items, which are searched for.</typeparam>
            <returns></returns>
        </member>
        <member name="M:MonoUI.GUI.RemoveElement">
            <summary>
            Removes the item from the GUI collection.
            </summary>
        </member>
        <member name="T:MonoUI.GUI.LayerDepth">
            <summary>
            Values between 0.9 and 1.0 for all the different layers of drawable elements. (Exclusive)
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.lowerTexture">
            <summary>
            Lower layer for textures.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.lowerPicture">
            <summary>
            Lower layer for pictures.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.lowerText">
            <summary>
            Lower layer for texts.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.middleTexture">
            <summary>
            Middle layer for textures.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.middlePicture">
            <summary>
            Middle layer for pictures.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.middleText">
            <summary>
            Middle layer for texts.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.upperTexture">
            <summary>
            Upper layer for textures.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.upperPicture">
            <summary>
            Upper layer for pictures.
            </summary>
        </member>
        <member name="F:MonoUI.GUI.LayerDepth.upperText">
            <summary>
            Upper layer for texts.
            </summary>
        </member>
        <member name="T:MonoUI.IDrawable">
            <summary>
            Interface for ensuring drawing functionality of objects.
            </summary>
        </member>
        <member name="M:MonoUI.IDrawable.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Method for drawing textures.
            </summary>
            <param name="spriteBatch">The sprite batch for drawing multiple textures together.</param>
            <param name="gameTime">The game time for the elapsed time since the last update.</param>
        </member>
        <member name="T:MonoUI.Image">
            <summary>
            Class for GUI image.
            </summary>
        </member>
        <member name="M:MonoUI.Image.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a new image within a box.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="image">The texture for the image.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Image.SetImage(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Sets a new image.
            </summary>
            <param name="newImage">The texture for the new image.</param>
        </member>
        <member name="M:MonoUI.Image.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the image.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.Input">
            <summary>
            Class for all keyboard and mouse input.
            </summary>
        </member>
        <member name="P:MonoUI.Input.MousePosition">
            <summary>
            Returns the mouse position in screen space coordinates;
            </summary>
        </member>
        <member name="P:MonoUI.Input.IsLeftMouseButtonPressed">
            <summary>
            Checks if the left mouse button is pressed down.
            </summary>
        </member>
        <member name="P:MonoUI.Input.IsRightMouseButtonPressed">
            <summary>
            Checks if the right mouse button is pressed down.
            </summary>
        </member>
        <member name="P:MonoUI.Input.IsAnyKeyPressed">
            <summary>
            Checks if any key is pressed down.
            </summary>
        </member>
        <member name="P:MonoUI.Input.PressedKeys">
            <summary>
            Returns all pressed keys;
            </summary>
        </member>
        <member name="M:MonoUI.Input.IsSpecificKeyPressed(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Checks if a specific key is pressed down.
            </summary>
            <param name="key">The name of the key that is pressed.</param>
            <returns></returns>
        </member>
        <member name="T:MonoUI.Label">
            <summary>
            Class for GUI label.
            </summary>
        </member>
        <member name="P:MonoUI.Label.Text">
            <summary>
            The text of the label.
            </summary>
        </member>
        <member name="P:MonoUI.Label.TextColor">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="M:MonoUI.Label.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Single)">
            <summary>
            The private constructor of the Label class.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="text">The text that is to be displayed within the label.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Label.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            Creates a new simple label.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="text">The text that is to be displayed within the label.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text.</param>
        </member>
        <member name="M:MonoUI.Label.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a new label with a background texture.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="text">The text that is to be displayed within the label.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text.</param>
            <param name="texture">The background texture for the label.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Label.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the the Label.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.ProgressBar">
            <summary>
            Class for GUI progress bar.
            </summary>
        </member>
        <member name="P:MonoUI.ProgressBar.ProgressColor">
            <summary>
            The color of the progress bar. This does not affect the background color.
            </summary>
        </member>
        <member name="P:MonoUI.ProgressBar.Status">
            <summary>
            The status of the progress bar, 0 means 0% filled and 1 means 100% filled.
            </summary>
        </member>
        <member name="M:MonoUI.ProgressBar.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single,System.Single)">
            <summary>
            The private constructor of the progress bar class.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="status">The status of the progress bar, 0 means 0% filled and 1 means 100% filled.</param>
            <param name="scale">The value for scaling the progress bar. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.ProgressBar.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single,System.Int32,System.Int32,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new simple progress bar.
            </summary>
            <param name="game">The game instance in that the progress bar is to be created.</param>
            <param name="dock">The location the progress bar should dock onto.</param>
            <param name="offset">The space in pixel between the progress bar and the dock location.</param>
            <param name="status">The status of the progress bar, 0 means 0% filled and 1 means 100% filled.</param>
            <param name="width">The width of the progress bar in pixel. This have to be greater than zero.</param>
            <param name="height">The height of the progress bar in pixel. This have to be greater than zero.</param>
            <param name="progressColor">The color of the progress bar. (Foreground)</param>
            <param name="backgroundColor">The color behind the progress bar. (Background)</param>
        </member>
        <member name="M:MonoUI.ProgressBar.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a new progress bar with textures.
            </summary>
            <param name="game">The game instance in that the progress bar is to be created.</param>
            <param name="dock">The location the progress bar should dock onto.</param>
            <param name="offset">The space in pixel between the progress bar and the dock location.</param>
            <param name="status">The status of the progress bar, 0 means 0% filled and 1 means 100% filled.</param>
            <param name="textureBackground">The texture for the background bar.</param>
            <param name="textureProgress">The texture for the foreground bar.</param>
            <param name="scale">The value for scaling the textures. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.ProgressBar.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the progress bar.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.RadioButton">
            <summary>
            Class for GUI radio button.
            </summary>
        </member>
        <member name="P:MonoUI.RadioButton.State">
            <summary>
            The current On/Off state of the radio button.
            </summary>
        </member>
        <member name="M:MonoUI.RadioButton.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Collections.Generic.List{MonoUI.RadioButton},System.Single)">
            <summary>
            Creates a new radio button.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="textureOff">The texture for the of/not checked state.</param>
            <param name="textureOn">The texture for the on/checked state.</param>
            <param name="group">A list of this type to group radio buttons together.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.RadioButton.ChangeActiveRadioButton">
            <summary>
            Changes the active radio button within a group of radio buttons.
            </summary>
        </member>
        <member name="M:MonoUI.RadioButton.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the radio button.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.Slider">
            <summary>
            Class for GUI slider.
            </summary>
        </member>
        <member name="P:MonoUI.Slider.Alignment">
            <summary>
            True is horizontal alignment, false is vertical alignment.
            </summary>
        </member>
        <member name="P:MonoUI.Slider.BackgroundColor">
            <summary>
            The color of the background bar.
            </summary>
        </member>
        <member name="P:MonoUI.Slider.StatusColor">
            <summary>
            The color of the status bar.
            </summary>
        </member>
        <member name="P:MonoUI.Slider.MinValue">
            <summary>
            The minimum value of the slider. (Inclusive)
            </summary>
        </member>
        <member name="P:MonoUI.Slider.MaxValue">
            <summary>
            The maximum value of the slider. (Inclusive)
            </summary>
        </member>
        <member name="P:MonoUI.Slider.Value">
            <summary>
            The current value of the slider. This value is clamped between MinValue and MaxValue. (Inclusive)
            </summary>
        </member>
        <member name="P:MonoUI.Slider.Step">
            <summary>
            The step between each value when using the handle. No value results in no steps.
            </summary>
        </member>
        <member name="P:MonoUI.Slider.Status">
            <summary>
            The status of the slider, 0 means 0% filled and 1 means 100% filled.
            </summary>
        </member>
        <member name="M:MonoUI.Slider.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The private constructor of the slider class.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="minValue">The minimum value of the slider. (Inclusive)</param>
            <param name="maxValue">The maximum value of the slider. (Inclusive)</param>
            <param name="value">The current value of the slider. This value is clamped between minValue and maxValue.</param>
            <param name="scale">The value for scaling the textures.</param>
        </member>
        <member name="M:MonoUI.Slider.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single,System.Single,System.Single,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a new simple slider.
            </summary>
            <param name="game">The game instance in that the slider is to be created.</param>
            <param name="dock">The location the slider should dock onto.</param>
            <param name="offset">The space in pixel between the slider and the dock location.</param>
            <param name="minValue">The minimum value of the slider. (Inclusive)</param>
            <param name="maxValue">The maximum value of the slider. (Inclusive)</param>
            <param name="value">The current value of the slider. This value is clamped between minValue and maxValue.</param>
            <param name="width">The width of the slider bar in pixel. This have to be greater than zero.</param>
            <param name="height">The height of the slider bar in pixel. This have to be greater than zero.</param>
            <param name="textureHandle">The texture for the slider handle.</param>
            <param name="scale">The scale of the handle texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Slider.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a new slider with textures.
            </summary>
            <param name="game">The game instance in that the slider is to be created.</param>
            <param name="dock">The location the slider should dock onto.</param>
            <param name="offset">The space in pixel between the slider and the dock location.</param>
            <param name="minValue">The minimum value of the slider. (Inclusive)</param>
            <param name="maxValue">The maximum value of the slider. (Inclusive)</param>
            <param name="value">The current value of the slider. This value is clamped between minValue and maxValue.</param>
            <param name="textureBackground">The texture for the background bar.</param>
            <param name="textureStaus">The texture for the foreground bar.</param>
            <param name="textureHandle">The texture for the slider handle.</param>
            <param name="scale">The value for scaling the textures. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Slider.SetPosition(MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point)">
            <summary>
            Sets the position of the control element.
            </summary>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
        </member>
        <member name="M:MonoUI.Slider.InitialHandlePosition">
            <summary>
            Returns the initial position for the slider handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MonoUI.Slider.Interact">
            <summary>
            Sets the value and the handle position of the slider, when an interaction occurs.
            </summary>
        </member>
        <member name="M:MonoUI.Slider.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the slider.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.StatusBar">
            <summary>
            Base class for status bars. Only for inheritance.
            </summary>
        </member>
        <member name="P:MonoUI.StatusBar.Alignment">
            <summary>
            True is horizontal alignment, false is vertical alignment.
            </summary>
        </member>
        <member name="P:MonoUI.StatusBar.Status">
            <summary>
            The status of the status bar, 0 means 0% filled and 1 means 100% filled.
            </summary>
        </member>
        <member name="P:MonoUI.StatusBar.StatusTexture">
            <summary>
            The texture that represents the status.
            </summary>
        </member>
        <member name="M:MonoUI.StatusBar.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single)">
            <summary>
            Base constructor for status bars. Only for inheritance.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.StatusBar.StatusBarSize">
            <summary>
            Returns the rectangle for the status bar.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MonoUI.TextBox">
            <summary>
            Class for GUI text box.
            </summary>
        </member>
        <member name="P:MonoUI.TextBox.Text">
            <summary>
            The text inside the text box.
            </summary>
        </member>
        <member name="P:MonoUI.TextBox.TextColor">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="P:MonoUI.TextBox.OverFlow">
            <summary>
            Determines if the text can reach over the text field.
            </summary>
        </member>
        <member name="P:MonoUI.TextBox.MaxCharacters">
            <summary>
            The maximum number of characters the text can contain.
            </summary>
        </member>
        <member name="P:MonoUI.TextBox.Indentation">
            <summary>
            The empty space in pixel on the left side between the texture and the text.
            </summary>
        </member>
        <member name="M:MonoUI.TextBox.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Single)">
            <summary>
            The private constructor of the text box class.
            </summary>
            <param name="game">The game instance in that the text box is to be created.</param>
            <param name="dock">The location the text box should dock onto.</param>
            <param name="offset">The space in pixel between the text box and the dock location.</param>
            <param name="text">The initial text that is to be displayed in the text box.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text. The font size should match with the measurements.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.TextBox.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Int32,System.Int32)">
            <summary>
            Creates a new simple single line text box.
            </summary>
            <param name="game">The game instance in that the text box is to be created.</param>
            <param name="dock">The location the text box should dock onto.</param>
            <param name="offset">The space in pixel between the text box and the dock location.</param>
            <param name="text">The initial text that is to be displayed in the text box.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text. The font size should match with the measurements.</param>
            <param name="width">The width of the text box in pixel. This have to be greater than zero.</param>
            <param name="height">The height of the text box in pixel. This have to be greater than zero.</param>
        </member>
        <member name="M:MonoUI.TextBox.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a new single line text box with a texture.
            </summary>
            <param name="game">The game instance in that the text box is to be created.</param>
            <param name="dock">The location the text box should dock onto.</param>
            <param name="offset">The space in pixel between the text box and the dock location.</param>
            <param name="text">The initial text that is to be displayed in the text box.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text. The font size should match with the measurements.</param>
            <param name="texture">The texture of the text box.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.TextBox.EditText(System.Object,Microsoft.Xna.Framework.TextInputEventArgs)">
            <summary>
            Edits the text of the text field.
            </summary>
            <param name="sender">The object that triggered the event.</param>
            <param name="e">The event arguments for text input.</param>
        </member>
        <member name="M:MonoUI.TextBox.AdditionalKeyFunctionality(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Checks specific keys that are not part of TextInput event.
            </summary>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="M:MonoUI.TextBox.IsSpaceFree(System.Char)">
            <summary>
            Returns true if space is available in the text box. Otherwise returns false.
            </summary>
            <param name="character">The new character that is to be added, for measurements.</param>
            <returns></returns>
        </member>
        <member name="M:MonoUI.TextBox.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the the text box.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.Tool">
            <summary>
            The utility class of the GUI system.
            </summary>
        </member>
        <member name="M:MonoUI.Tool.CreateTexture(Microsoft.Xna.Framework.Graphics.GraphicsDevice@,System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new single color texture.
            </summary>
            <param name="graphicsDevice">The graphics device that is going to draw the texture.</param>
            <param name="width">The width of the new texture in pixel. This have to be greater than zero.</param>
            <param name="height">The height of the new texture in pixel. This have to be greater than zero.</param>
            <param name="color">The color of the new texture.</param>
            <returns></returns>
        </member>
        <member name="T:MonoUI.Tooltip">
            <summary>
            Class for GUI tooltip.
            </summary>
        </member>
        <member name="P:MonoUI.Tooltip.MouseCursorOffset">
            <summary>
            The space in pixel between the tooltip and the active mouse cursor.
            </summary>
        </member>
        <member name="P:MonoUI.Tooltip.TextColor">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="P:MonoUI.Tooltip.BackgroundColor">
            <summary>
            The color of the background texture.
            </summary>
        </member>
        <member name="P:MonoUI.Tooltip.ShowTime">
            <summary>
            The time in milliseconds that the control have to be selected before the tooltip is shown.
            </summary>
        </member>
        <member name="P:MonoUI.Tooltip.FadeInTime">
            <summary>
            The time in milliseconds the fade in effect lasts.
            </summary>
        </member>
        <member name="F:MonoUI.Tooltip.selectionTime">
            <summary>
            The time in milliseconds that the linked control element is selected.
            </summary>
        </member>
        <member name="M:MonoUI.Tooltip.#ctor(Microsoft.Xna.Framework.Game)">
            <summary>
            The private constructor of the tooltip class.
            </summary>
            <param name="game">The game instance in that the tooltip is to be created.</param>
        </member>
        <member name="M:MonoUI.Tooltip.#ctor(Microsoft.Xna.Framework.Game,System.String,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a text tooltip that displays additional informations in combination with a control element.
            </summary>
            <param name="game">The game instance in that the tooltip is to be created.</param>
            <param name="text">The text that is to be displayed within the tooltip.</param>
            <param name="textColor">The color of the text.</param>
            <param name="font">The font of the text.</param>
            <param name="backgroundColor">The color of the text background.</param>
        </member>
        <member name="M:MonoUI.Tooltip.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Creates a picture tooltip that displays additional informations in combination with a control element.
            </summary>
            <param name="game">The game instance in that the tooltip is to be created.</param>
            <param name="picture">The picture that is to be displayed within the tooltip.</param>
            <param name="scale">The scale of the picture.</param>
        </member>
        <member name="M:MonoUI.Tooltip.SetText(System.String)">
            <summary>
            Sets the text of the tooltip. (Doesn't work in combination with a picture.)
            </summary>
            <param name="text">The text that is to be displayed within the tooltip.</param>
        </member>
        <member name="M:MonoUI.Tooltip.SetPicture(Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Sets the picture of the tooltip. (Doesn't work in combination with text.)
            </summary>
            <param name="picture">The picture that is to be displayed within the tooltip.</param>
            <param name="scale">The scale of the picture.</param>
        </member>
        <member name="M:MonoUI.Tooltip.Activate(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,System.Boolean)">
            <summary>
            Determines the current status of the tooltip.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
            <param name="isSelected">The isSelected state of the connected control element.</param>
        </member>
        <member name="M:MonoUI.Tooltip.Show(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.GameTime,System.Single)">
            <summary>
            Shows the tooltip for the related control element.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
            <param name="alpha">The alpha value of the tooltip textures and colors.</param>
        </member>
        <member name="T:MonoUI.Widget">
            <summary>
            Base class for all control elements. Only for inheritance.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.IsActive">
            <summary>
            Defines if the user can interact with the control element.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.IsVisible">
            <summary>
            Defines if the control element is visible. An invisible control element is always inactive.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Color">
            <summary>
            The color of the texture of the control element.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.SelectionColor">
            <summary>
            The color the control element receives when it gets selected. No value results in no color change.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.IsSelected">
            <summary>
            True if the control element is selected, otherwise false.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.IsPressed">
            <summary>
            True if the control element is pressed, otherwise false;
            </summary>
        </member>
        <member name="T:MonoUI.Widget.EventHandler">
            <summary>
            Delegate for managing events.
            </summary>
        </member>
        <member name="E:MonoUI.Widget.OnClick">
            <summary>
            Raises an event during the frame the control element is clicked.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Position">
            <summary>
            The absolut position of the control element.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Tooltip">
            <summary>
            The tooltip that is to be displayed when the control element gets selected.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Dock">
            <summary>
            The location the control element should dock onto.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Offset">
            <summary>
            The space in pixel between the control element and the dock location.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Layer">
            <summary>
            The layer on that the texture is drawn.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Scale">
            <summary>
            The scale of the texture.
            </summary>
        </member>
        <member name="P:MonoUI.Widget.Texture">
            <summary>
            The texture of the control element.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.isElementPressed">
            <summary>
            Ensures that only one control element is pressed at a time.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.isHeldDown">
            <summary>
            True while the control element is held down.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.isPressDone">
            <summary>
            Ensures only one activation per press.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.isFirstFrame">
            <summary>
            True during the frame in that the control element is pressed.
            </summary>
        </member>
        <member name="M:MonoUI.Widget.#ctor(Microsoft.Xna.Framework.Game,MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,System.Single)">
            <summary>
            Base constructor for all control elements. Only for inheritance.
            </summary>
            <param name="game">The game instance in that the control element is to be created.</param>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="scale">The value for scaling the texture. 1.0 is no scaling.</param>
        </member>
        <member name="M:MonoUI.Widget.ToggleIsActive">
            <summary>
            Toggles the IsActive state of the control element.
            </summary>
        </member>
        <member name="M:MonoUI.Widget.ToggleIsVisible">
            <summary>
            Toggles the IsVisible state of the control element.
            </summary>
        </member>
        <member name="M:MonoUI.Widget.CalculatePosition(MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single)">
            <summary>
            Gets the relative position for the control element.
            </summary>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
            <param name="texture">The texture that determines the positioning.</param>
            <param name="scale">The scale of the texture.</param>
            <returns></returns>
        </member>
        <member name="M:MonoUI.Widget.SetPosition(MonoUI.Widget.DockControl,Microsoft.Xna.Framework.Point)">
            <summary>
            Sets the position of the control element.
            </summary>
            <param name="dock">The location the control element should dock onto.</param>
            <param name="offset">The space in pixel between the control element and the dock location.</param>
        </member>
        <member name="M:MonoUI.Widget.IsTextureSelected(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Checks if a texture at a specific position is selected.
            </summary>
            <param name="texture">The texture that is to be checked.</param>
            <param name="position">The absolute position of the texture.</param>
            <param name="scale">The scale of the texture. 1 is no scaling.</param>
            <returns></returns>
        </member>
        <member name="M:MonoUI.Widget.IsTexturePressed(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Checks if a texture at a specific position is pressed.
            </summary>
            <param name="texture">The texture that is to be checked.</param>
            <param name="position">The absolute position of the texture.</param>
            <param name="scale">The scale of the texture. 1 is no scaling.</param>
            <returns></returns>
        </member>
        <member name="M:MonoUI.Widget.ResetPressState">
            <summary>
            Resets the press state. Use this if a control element has more than one pressable sections.
            </summary>
        </member>
        <member name="M:MonoUI.Widget.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.GameTime@)">
            <summary>
            Draws the the control element.
            </summary>
            <param name="spriteBatch">The sprite batch that draws the texture.</param>
            <param name="gameTime">The game time for the elapsed time since the last update call.</param>
        </member>
        <member name="T:MonoUI.Widget.DockControl">
            <summary>
            Defines where the control element should dock onto the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.Center">
            <summary>
            The center of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.CornerTopLeft">
            <summary>
            The corner at the top left of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.CornerTopRight">
            <summary>
            The corner at the top right of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.CornerBottomLeft">
            <summary>
            The corner at the bottom left of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.CornerBottomRight">
            <summary>
            The corner at the bottom right of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.MiddleTop">
            <summary>
            The middle at the top side of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.MiddleBottom">
            <summary>
            The middle at the bottom side of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.MiddleLeft">
            <summary>
            The middle at the left side of the screen.
            </summary>
        </member>
        <member name="F:MonoUI.Widget.DockControl.MiddleRight">
            <summary>
            The middle at the right side of the screen.
            </summary>
        </member>
    </members>
</doc>
